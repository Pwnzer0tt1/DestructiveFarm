#!/usr/bin/env python3

import sys, requests, json, re
import secrets
from random_user_agent.user_agent import UserAgent
from pwn import *
from lxml import html

host = sys.argv[1]
flag_id_host = json.loads(sys.argv[2])

user = secrets.token_hex(8)
password = secrets.token_hex(8)

def find_print_flag(string_with_flag):
    find = re.findall(b"[A-Z0-9]{31}=",string_with_flag)
    if len(find) > 0:
        f_flag = find[0].decode()
        print(f_flag, flush=True)

#service_name='INSERT_HERE_SERVICE_NAME'
service_port=1337
#flagIds = requests.get('http://FLAG_IDS_IP:PORT/flagIds').json()
#flag_id_data = flagIds[service_name]
#flag_id_host = flag_id_data[host]


#WEB EXPLOIT
'''
user_agent_rotator = UserAgent()
headers={
    "User-Agent": user_agent_rotator.get_random_user_agent(),
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9", 
    "Accept-Encoding": "gzip, deflate", 
    "Accept-Language": "en-GB,en;q=0.9,it-IT;q=0.8,it;q=0.7,en-US;q=0.6", 
    }
user = secrets.token_hex(8)
password = secrets.token_hex(8)

s = requests.Session()
s.headers.update(headers)
home = s.get(f"http://{host}/").content

s.post(f"http://{host}/", data={"username":user,"password":password})

resp = s.post(f"http://{host}/", data={"prova":"provola","number":1}).content
print(resp)

testo = re.findall(b'testo da cercare [a-f0-9]{32}', resp)[0].decode()

req = s.post(f'http://{host}:{service_port}/exam_submit.php', json={
        "id": int('12'),
        "answer": [0]*100
    })

for flag_id in flag_id_host:
    try:
        #do stuff
        find_print_flags(flag_response)
    except:
        continue

'''

#PWNTOOLS EXPLOIT
'''
p = remote(host,service_port)

p.recvuntil(b'> ')
p.sendline(b'1')

resp = p.recvuntil(b'> ')
print(resp)

my_var = resp.split(b' ')[0].split(b' ')[1].decode()

testo = re.findall(b'testo da cercare [a-f0-9]{32}', resp)[0].decode()

for flag_id in flag_id_host:
    try:
        #do stuff
        find_print_flags(flag_response)
    except:
        continue

'''
